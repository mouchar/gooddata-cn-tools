apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: default
servers: 1
agents: 2
kubeAPI:
  host: "localhost"
  hostIP: "0.0.0.0"
  hostPort: "6443"
# If not specified, the latest version will be used
# image: rancher/k3s:v1.30.1-k3s1
network: k3d-default
volumes:
- volume: "${PWD}/cert-manager.yaml:/var/lib/rancher/k3s/server/manifests/cert-manager.yaml"
  nodeFilters:
  - server:0
- volume: "${PWD}/ingress-nginx.yaml:/var/lib/rancher/k3s/server/manifests/ingress-nginx.yaml"
  nodeFilters:
  - server:0
ports:
- port: "${K3D_HTTPS_PORT}:443"
  nodeFilters:
  - loadbalancer
- port: "${K3D_HTTP_PORT}:80"
  nodeFilters:
  - loadbalancer
registries:
  create:
    name: k3d-registry
    host: "0.0.0.0"
    hostPort: "${DOCKER_REGISTRY_PORT}"
    volumes:
    - registry-data:/var/lib/registry
  config: |
    mirrors:
      "k3d-registry:${DOCKER_REGISTRY_PORT}":
        endpoint:
          - http://k3d-registry:${DOCKER_REGISTRY_PORT}
options:
  k3d:
    wait: true
    timeout: "60s"
  k3s:
    extraArgs:
    - arg: --disable=traefik
      nodeFilters:
      - server:*
    # nodeLabels:
    #   - label: role=infra
    #     nodeFilters:
    #       - agent:*
    #       - server:*
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true
